/*
**  Plymouth Portal theme.
*/


/*
** Window functions.
*/

Window.GetMaxWidth = fun()
{
    i = 0;
    width = 0;
    while (Window.GetWidth(i))
    {
        width = Math.Max(width, Window.GetWidth(i));
        i++;
    }
    return width;
};

Window.GetMaxHeight = fun()
{
    i = 0;
    height = 0;
    while (Window.GetHeight(i))
    {
        height = Math.Max(height, Window.GetHeight(i));
        i++;
    }
    return height;
};

Window.SetBackgroundColor = fun(red, green, blue)
{
    Window.SetBackgroundTopColor(red, green, blue);
    Window.SetBackgroundBottomColor(red, green, blue);
};

Window.SetBackgroundColor(0.00, 0.00, 0.00);

/*
** Array functions.
*/

Array.Size = fun(array)
{
    size = 0;
    while (array[size])
        size++;
    return size;
};

/*
** Util values.
*/

color_white.red = 1;
color_white.green = 1;
color_white.blue = 1;

/*
** Main script.
*/

// Load background

background.files = [
    [
        "portal_loading_a_1.png",
        "portal_loading_a_2.png",
        "portal_loading_a_3.png",
        "portal_loading_a_4.png"
    ],
    [
        "portal_loading_b_1.png",
        "portal_loading_b_2.png",
        "portal_loading_b_3.png",
        "portal_loading_b_4.png"
    ]
];

// Uncomment for random background at boot.
// background.bgIndex = Math.Int(Math.Random() * Array.Size(background.files));
background.bgIndex = 1;

i = 0;
while (background.files[background.bgIndex][i])
{
    file = background.files[background.bgIndex][i];
    img = Image(file);
    background.images[i] = img;
    i++;
}

speed = 1.000;

background.sprite = Sprite();
background.sprite.SetPosition(0, 0, 10);

background.index = -1;

background.opacity = 1.0;

background.pos.x = 0;
background.pos.y = 0;
background.pos.z = 100;

background.size.width = Window.GetMaxWidth();
background.size.height = Window.GetMaxHeight();

progress = 0.0;
time = 0.0;

/*
** Refresh callback.
*/

ease.enabled = 0;
ease.opacity = 0.0;
ease.start = 0;
ease.index = -1;

ease.sprite = Sprite();
ease.sprite.SetPosition(0, 0, 100);

fun refresh()
{
    index = Math.Int(progress * Array.Size(background.images));
    if (index >= Array.Size(background.images))
        index = Array.Size(background.images) - 1;

    if (index != ease.index)
    {
        ease.enabled = 1;
        ease.index = index;
        ease.start = time;
        ease.sprite.SetImage(background.images[index].Scale(Window.GetMaxWidth(), Window.GetMaxHeight()));
    }

    if (ease.enabled)
    {
        diff = time - ease.start;
        if (diff < speed)
        {
            ease.opacity = diff / speed;
            background.opacity = 1.0 - ease.opacity;

            ease.sprite.SetOpacity(ease.opacity);
            background.sprite.SetOpacity(background.opacity);
        }
        else
        {
            ease.enabled = 0;

            ease.sprite.SetImage(NULL);
            if (background.index != index)
            {
                background.sprite.SetImage(background.images[index].Scale(Window.GetMaxWidth(), Window.GetMaxHeight()));
                background.index = index;
            }

            ease.sprite.SetOpacity(0.0);
            background.sprite.SetOpacity(1.0);
        }
    }
    else
    {
        if (background.index != index)
        {
            background.sprite.SetImage(background.images[index].Scale(Window.GetMaxWidth(), Window.GetMaxHeight()));
            background.index = index;
        }
    }
}

Plymouth.SetRefreshFunction(refresh);

/*
** Progress callback.
*/

fun progress(time, progress)
{
    global.progress = progress * 10;
    if (global.progress > 1)
        global.progress = 1;
    global.time = time;
}

Plymouth.SetBootProgressFunction(progress);
